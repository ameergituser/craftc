# https://taskfile.dev

version: '3'

silent: true


tasks:
  default: task -l


  gen-src:*:
    desc: Generate test source code.
    vars:
      SRC_COUNT: "{{index .MATCH 0}}"
    cmds:
      - mkdir -p ./libgensrc
      - rm -f ./libgensrc/*
      - |
        {{- range $i := splitList " " (seq 1 (.SRC_COUNT | atoi)) }}
        echo -n '
        #include <stdio.h>

        void testlibfunc{{$i}}()
        {
            printf("testlibfunc{{$i}} called!\n");
        }
        ' > ./libgensrc/libsrc{{$i}}.c
        {{- end }}
      - |
        echo -n '
        #define LUCKY_NUMBER 13
        {{- range $i := splitList " " (seq 1 (.SRC_COUNT | atoi)) }}
        void testlibfunc{{$i}}();
        {{- end }}
        ' > ./libgensrc/lib.h


  clean:
    desc: Clean build artifacts
    cmds:
      - rm -rf ./build


  test1:
    desc: Tests the obj cmd
    cmds:
      - go build ../
      - ./craftc obj -cc cc -cfile ./libsrc/libsrc1.c -objdir ./build/{{.TASK}}/obj -cflags "-Wall -O2" {{.CLI_ARGS}}


  test2:
    desc: Tests the objs cmd with a few source files
    cmds:
      - go build ../
      - ./craftc objs -cc cc -cfiles "./libsrc/libsrc1.c ./libsrc/libsrc2.c" -objdir ./build/{{.TASK}}/obj -cflags "-Wall" {{.CLI_ARGS}}


  test3:
    desc: Tests the objs cmd with many generated source files
    summary: |
      Generate example source before running.
    vars:
      SRC:
        sh: echo ./libgensrc/*.c
    cmds:
      - go build ../
      - time ./craftc objs -cc cc -cfiles "{{.SRC}}" -objdir ./build/{{.TASK}}/obj -cflags "-Wall -O2" {{.CLI_ARGS}}


  test3-make:
    desc: Test build with a makefile
    cmds:
      - time make -j $(nproc) -s


  test4:
    desc: Tests the static-lib cmd with a few source files
    vars:
      BUILD_DIR: ./build/{{.TASK}}
      OBJ_DIR: '{{.BUILD_DIR}}/obj'
      SRC: ./libsrc/libsrc1.c ./libsrc/libsrc2.c
      STATIC_LIB: '{{.BUILD_DIR}}/{{.TASK}}.a'
      CFLAGS: -Wall -O2
    cmds:
      - go build ../
      - ./craftc static-lib -cc cc -cfiles "{{.SRC}}" -objdir {{.OBJ_DIR}} -cflags "{{.CFLAGS}}" -lib-path "{{.STATIC_LIB}}" {{.CLI_ARGS}}


  test5:
    desc: Tests the static-lib cmd with many generated source files.
    summary: |
      Generate example source before running.
    vars:
      BUILD_DIR: ./build/{{.TASK}}
      OBJ_DIR: '{{.BUILD_DIR}}/obj'
      SRC:
        sh: ls ./libgensrc/*.c
      STATIC_LIB: '{{.BUILD_DIR}}/{{.TASK}}.a'
      CFLAGS: -Wall -O2
    cmds:
      - go build ../
      - time ./craftc static-lib -cc cc -cfiles "{{.SRC}}" -objdir {{.OBJ_DIR}} -cflags "{{.CFLAGS}}" -lib-path "{{.STATIC_LIB}}" {{.CLI_ARGS}}


  test6:
    desc: Tests the app cmd with a few source files
    vars:
      BUILD_DIR: ./build/{{.TASK}}
      OBJ_DIR: '{{.BUILD_DIR}}/obj'
      SRC: ./appsrc/main.c
      STATIC_LIB: ./build/test4/test4.a
      CFLAGS: -Wall -O2 -I ./libsrc
      # LDFLAGS: -Wl,--trace
      APP_PATH: '{{.BUILD_DIR}}/{{.TASK}}-app'
    deps:
      - task: test4
    cmds:
      - >
        ./craftc exe
        -cc cc
        -cfiles "{{.SRC}}"
        -objdir {{.OBJ_DIR}}
        -cflags "{{.CFLAGS}}"
        -ldflags "{{.LDFLAGS}}"
        -exe-path {{.APP_PATH}}
        -lib-paths "{{.STATIC_LIB}}"
        {{.CLI_ARGS}}
      - '{{.APP_PATH}}'


  test7:
    desc: Tests the app cmd with a few source files.
    summary: |
      Generate example source before running.
    vars:
      BUILD_DIR: ./build/{{.TASK}}
      OBJ_DIR: '{{.BUILD_DIR}}/obj'
      SRC: ./appsrc/main.c
      STATIC_LIB: ./build/test5/test5.a
      CFLAGS: -Wall -O2 -I ./libgensrc
      # LDFLAGS: -Wl,--trace
      EXE_PATH: '{{.BUILD_DIR}}/{{.TASK}}'
    deps:
      - task: test5
    cmds:
      - >
        ./craftc exe
        -cc cc
        -cfiles "{{.SRC}}"
        -objdir {{.OBJ_DIR}}
        -cflags "{{.CFLAGS}}"
        -ldflags "{{.LDFLAGS}}"
        -exe-path {{.EXE_PATH}}
        -lib-paths "{{.STATIC_LIB}}"
        {{.CLI_ARGS}}
      - '{{.EXE_PATH}}'


  test8:
    desc: Tests the ignore unknown flags feature.
    cmds:
      - go build ../
      - ./craftc obj -cc cc -cfile ./libsrc/libsrc1.c -objdir ./build/{{.TASK}}/obj -cflags "-Wall -O2" -i {{.CLI_ARGS}}


  all:
    desc: Run all tests.
    cmds:
      - task: test1
      - task: test2
      - task: test3
      - task: test3-make
      - task: test4
      - task: test5
      - task: test6
      - task: test7
